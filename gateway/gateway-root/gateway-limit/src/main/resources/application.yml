spring:
  application:
    name: cloud-gateway-limit
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
      routes:
        - id: service_customer
          uri: lb://CONSUMER
          order: 0
#          路由谓语工厂，简单理解为执行此路由的条件判断，只有当满足条件时才认为应该使用这个路由规则
          predicates:
            - Path=/customer/**
          filters:
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@remoteAddrKeyResolver}"
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 5
            - AddResponseHeader=X-Response-Default-Foo, Default-Bar
#            - Retry=5
            - name: Hystrix
              args:
                name: fallbackcmd
#                name: default
                fallbackUri: forward:/fallback
#      default-filters:
#        - Elapsed=true
        # fail with "java.lang.IllegalArgumentException: No Configuration found for route service_customer"
#        - name: RequestRateLimiter
#          args:
#            key-resolver: "#{@remoteAddrKeyResolver}"
#            redis-rate-limiter.replenishRate: 1
#            redis-rate-limiter.burstCapacity: 5
      httpclient:
        pool:
          acquire-timeout: 10000
  redis:
    host: localhost
    port: 6379
    database: 0
server:
  port: 10000
eureka:
  client:
    service-url:
      defaultZone: http://localhost:7000/eureka/
logging:
  level:
    org.springframework.cloud.gateway: debug
    com.windmt.filter: debug
management:
  endpoints:
    web:
      exposure:
        include: "*"